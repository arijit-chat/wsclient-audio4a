set(AFB_REMPORT "1234")
set(AFB_TOKEN "1234")
set(ARCHIVE_OUTPUT "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/packaging/agl-libclient-audio4a_1.0.orig.tar.gz")
set(ARCHIVE_OUTPUT_ARCHIVE "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/packaging/agl-libclient-audio4a_1.0.orig.tar")
set(BINDINGS_LINK_FLAG "-Wl,--version-script=/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/export.map")
set(BUILD_ENV_SYSROOT "-Wl,--version-script=/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/export.map")
set(Blue "[34m")
set(BoldBlue "[1;34m")
set(BoldCyan "[1;36m")
set(BoldGreen "[1;32m")
set(BoldMagenta "[1;35m")
set(BoldRed "[1;31m")
set(BoldWhite "[1;37m")
set(BoldYellow "[1;33m")
set(CCOV_COMPILE_OPTIONS "-g-O2--coverage")
set(CHECK_LIBRARY_EXISTS_LIBRARIES "efence")
set(CMAKE_AR "/usr/bin/ar")
set(CMAKE_AR "/usr/bin/ar")
set(CMAKE_BASE_NAME "g++")
set(CMAKE_BINARY_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build")
set(CMAKE_BUILD_TOOL "/usr/bin/gmake")
set(CMAKE_BUILD_TYPE "DEBUG")
set(CMAKE_BUILD_TYPE "DEBUG")
set(CMAKE_C11_COMPILE_FEATURES "c_std_11c_static_assert")
set(CMAKE_C11_EXTENSION_COMPILE_OPTION "-std=gnu11")
set(CMAKE_C11_STANDARD_COMPILE_OPTION "-std=c11")
set(CMAKE_C90_COMPILE_FEATURES "c_std_90c_function_prototypes")
set(CMAKE_C90_EXTENSION_COMPILE_OPTION "-std=gnu90")
set(CMAKE_C90_STANDARD_COMPILE_OPTION "-std=c90")
set(CMAKE_C99_COMPILE_FEATURES "c_std_99c_restrictc_variadic_macros")
set(CMAKE_C99_EXTENSION_COMPILE_OPTION "-std=gnu99")
set(CMAKE_C99_STANDARD_COMPILE_OPTION "-std=c99")
set(CMAKE_CFG_INTDIR ".")
set(CMAKE_COLOR_MAKEFILE "ON")
set(CMAKE_COMMAND "/usr/bin/cmake")
set(CMAKE_COMPILER_IS_GNUCC "1")
set(CMAKE_COMPILER_IS_GNUCXX "1")
set(CMAKE_CPACK_COMMAND "/usr/bin/cpack")
set(CMAKE_CROSSCOMPILING "/usr/bin/cpack")
set(CMAKE_CTEST_COMMAND "/usr/bin/ctest")
set(CMAKE_CURRENT_BINARY_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build")
set(CMAKE_CURRENT_LIST_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d")
set(CMAKE_CURRENT_LIST_FILE "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/04-extra_targets.cmake")
set(CMAKE_CURRENT_SOURCE_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a")
set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11cxx_alias_templatescxx_alignascxx_alignofcxx_attributescxx_auto_typecxx_constexprcxx_decltypecxx_decltype_incomplete_return_typescxx_default_function_template_argscxx_defaulted_functionscxx_defaulted_move_initializerscxx_delegating_constructorscxx_deleted_functionscxx_enum_forward_declarationscxx_explicit_conversionscxx_extended_friend_declarationscxx_extern_templatescxx_finalcxx_func_identifiercxx_generalized_initializerscxx_inheriting_constructorscxx_inline_namespacescxx_lambdascxx_local_type_template_argscxx_long_long_typecxx_noexceptcxx_nonstatic_member_initcxx_nullptrcxx_overridecxx_range_forcxx_raw_string_literalscxx_reference_qualified_functionscxx_right_angle_bracketscxx_rvalue_referencescxx_sizeof_membercxx_static_assertcxx_strong_enumscxx_thread_localcxx_trailing_return_typescxx_unicode_literalscxx_uniform_initializationcxx_unrestricted_unionscxx_user_literalscxx_variadic_macroscxx_variadic_templates")
set(CMAKE_CXX11_EXTENSION_COMPILE_OPTION "-std=gnu++11")
set(CMAKE_CXX11_STANDARD_COMPILE_OPTION "-std=c++11")
set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14cxx_aggregate_default_initializerscxx_attribute_deprecatedcxx_binary_literalscxx_contextual_conversionscxx_decltype_autocxx_digit_separatorscxx_generic_lambdascxx_lambda_init_capturescxx_relaxed_constexprcxx_return_type_deductioncxx_variable_templates")
set(CMAKE_CXX14_EXTENSION_COMPILE_OPTION "-std=gnu++14")
set(CMAKE_CXX14_STANDARD_COMPILE_OPTION "-std=c++14")
set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
set(CMAKE_CXX17_EXTENSION_COMPILE_OPTION "-std=gnu++1z")
set(CMAKE_CXX17_STANDARD_COMPILE_OPTION "-std=c++1z")
set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98cxx_template_template_parameters")
set(CMAKE_CXX98_EXTENSION_COMPILE_OPTION "-std=gnu++98")
set(CMAKE_CXX98_STANDARD_COMPILE_OPTION "-std=c++98")
set(CMAKE_CXX_ABI_COMPILED "TRUE")
set(CMAKE_CXX_ARCHIVE_APPEND "<CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_CXX_ARCHIVE_APPEND_IPO "/usr/bin/gcc-ar-5 r <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_CXX_ARCHIVE_CREATE "<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_CXX_ARCHIVE_CREATE_IPO "/usr/bin/gcc-ar-5 cr <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>")
set(CMAKE_CXX_ARCHIVE_FINISH_IPO "/usr/bin/gcc-ranlib-5 <TARGET>")
set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "/usr/bin/gcc-ranlib-5 <TARGET>")
set(CMAKE_CXX_COMPILER "/usr/bin/g++-5")
set(CMAKE_CXX_COMPILER "/usr/bin/g++-5")
set(CMAKE_CXX_COMPILER_ABI "ELF")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-5")
set(CMAKE_CXX_COMPILER_AR "/usr/bin/gcc-ar-5")
set(CMAKE_CXX_COMPILER_ARG1 "/usr/bin/gcc-ar-5")
set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
set(CMAKE_CXX_COMPILER_ID "GNU")
set(CMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT "#define STRINGIFY_HELPER(X) #X\n#define STRINGIFY(X) STRINGIFY_HELPER(X)\n\n/* Identify known platforms by name.  */\n#if defined(__linux) || defined(__linux__) || defined(linux)\n# define PLATFORM_ID \"Linux\"\n\n#elif defined(__CYGWIN__)\n# define PLATFORM_ID \"Cygwin\"\n\n#elif defined(__MINGW32__)\n# define PLATFORM_ID \"MinGW\"\n\n#elif defined(__APPLE__)\n# define PLATFORM_ID \"Darwin\"\n\n#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)\n# define PLATFORM_ID \"Windows\"\n\n#elif defined(__FreeBSD__) || defined(__FreeBSD)\n# define PLATFORM_ID \"FreeBSD\"\n\n#elif defined(__NetBSD__) || defined(__NetBSD)\n# define PLATFORM_ID \"NetBSD\"\n\n#elif defined(__OpenBSD__) || defined(__OPENBSD)\n# define PLATFORM_ID \"OpenBSD\"\n\n#elif defined(__sun) || defined(sun)\n# define PLATFORM_ID \"SunOS\"\n\n#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)\n# define PLATFORM_ID \"AIX\"\n\n#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)\n# define PLATFORM_ID \"IRIX\"\n\n#elif defined(__hpux) || defined(__hpux__)\n# define PLATFORM_ID \"HP-UX\"\n\n#elif defined(__HAIKU__)\n# define PLATFORM_ID \"Haiku\"\n\n#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)\n# define PLATFORM_ID \"BeOS\"\n\n#elif defined(__QNX__) || defined(__QNXNTO__)\n# define PLATFORM_ID \"QNX\"\n\n#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)\n# define PLATFORM_ID \"Tru64\"\n\n#elif defined(__riscos) || defined(__riscos__)\n# define PLATFORM_ID \"RISCos\"\n\n#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)\n# define PLATFORM_ID \"SINIX\"\n\n#elif defined(__UNIX_SV__)\n# define PLATFORM_ID \"UNIX_SV\"\n\n#elif defined(__bsdos__)\n# define PLATFORM_ID \"BSDOS\"\n\n#elif defined(_MPRAS) || defined(MPRAS)\n# define PLATFORM_ID \"MP-RAS\"\n\n#elif defined(__osf) || defined(__osf__)\n# define PLATFORM_ID \"OSF1\"\n\n#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)\n# define PLATFORM_ID \"SCO_SV\"\n\n#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)\n# define PLATFORM_ID \"ULTRIX\"\n\n#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)\n# define PLATFORM_ID \"Xenix\"\n\n#elif defined(__WATCOMC__)\n# if defined(__LINUX__)\n#  define PLATFORM_ID \"Linux\"\n\n# elif defined(__DOS__)\n#  define PLATFORM_ID \"DOS\"\n\n# elif defined(__OS2__)\n#  define PLATFORM_ID \"OS2\"\n\n# elif defined(__WINDOWS__)\n#  define PLATFORM_ID \"Windows3x\"\n\n# else /* unknown platform */\n#  define PLATFORM_ID\n# endif\n\n#else /* unknown platform */\n# define PLATFORM_ID\n\n#endif\n\n/* For windows compilers MSVC and Intel we can determine\n   the architecture of the compiler being used.  This is because\n   the compilers do not have flags that can change the architecture,\n   but rather depend on which compiler is being used\n*/\n#if defined(_WIN32) && defined(_MSC_VER)\n# if defined(_M_IA64)\n#  define ARCHITECTURE_ID \"IA64\"\n\n# elif defined(_M_X64) || defined(_M_AMD64)\n#  define ARCHITECTURE_ID \"x64\"\n\n# elif defined(_M_IX86)\n#  define ARCHITECTURE_ID \"X86\"\n\n# elif defined(_M_ARM)\n#  if _M_ARM == 4\n#   define ARCHITECTURE_ID \"ARMV4I\"\n#  elif _M_ARM == 5\n#   define ARCHITECTURE_ID \"ARMV5I\"\n#  else\n#   define ARCHITECTURE_ID \"ARMV\" STRINGIFY(_M_ARM)\n#  endif\n\n# elif defined(_M_MIPS)\n#  define ARCHITECTURE_ID \"MIPS\"\n\n# elif defined(_M_SH)\n#  define ARCHITECTURE_ID \"SHx\"\n\n# else /* unknown architecture */\n#  define ARCHITECTURE_ID \"\"\n# endif\n\n#elif defined(__WATCOMC__)\n# if defined(_M_I86)\n#  define ARCHITECTURE_ID \"I86\"\n\n# elif defined(_M_IX86)\n#  define ARCHITECTURE_ID \"X86\"\n\n# else /* unknown architecture */\n#  define ARCHITECTURE_ID \"\"\n# endif\n\n#else\n#  define ARCHITECTURE_ID\n#endif\n\n/* Convert integer to decimal digit literals.  */\n#define DEC(n)                   \\\n  ('0' + (((n) / 10000000)%10)), \\\n  ('0' + (((n) / 1000000)%10)),  \\\n  ('0' + (((n) / 100000)%10)),   \\\n  ('0' + (((n) / 10000)%10)),    \\\n  ('0' + (((n) / 1000)%10)),     \\\n  ('0' + (((n) / 100)%10)),      \\\n  ('0' + (((n) / 10)%10)),       \\\n  ('0' +  ((n) % 10))\n\n/* Convert integer to hex digit literals.  */\n#define HEX(n)             \\\n  ('0' + ((n)>>28 & 0xF)), \\\n  ('0' + ((n)>>24 & 0xF)), \\\n  ('0' + ((n)>>20 & 0xF)), \\\n  ('0' + ((n)>>16 & 0xF)), \\\n  ('0' + ((n)>>12 & 0xF)), \\\n  ('0' + ((n)>>8  & 0xF)), \\\n  ('0' + ((n)>>4  & 0xF)), \\\n  ('0' + ((n)     & 0xF))\n\n/* Construct a string literal encoding the version number components. */\n#ifdef COMPILER_VERSION_MAJOR\nchar const info_version[] = {\n  'I', 'N', 'F', 'O', ':',\n  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  COMPILER_VERSION_MAJOR,\n# ifdef COMPILER_VERSION_MINOR\n  '.', COMPILER_VERSION_MINOR,\n#  ifdef COMPILER_VERSION_PATCH\n   '.', COMPILER_VERSION_PATCH,\n#   ifdef COMPILER_VERSION_TWEAK\n    '.', COMPILER_VERSION_TWEAK,\n#   endif\n#  endif\n# endif\n  ']','\\0'}\n#endif\n\n/* Construct a string literal encoding the version number components. */\n#ifdef SIMULATE_VERSION_MAJOR\nchar const info_simulate_version[] = {\n  'I', 'N', 'F', 'O', ':',\n  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  SIMULATE_VERSION_MAJOR,\n# ifdef SIMULATE_VERSION_MINOR\n  '.', SIMULATE_VERSION_MINOR,\n#  ifdef SIMULATE_VERSION_PATCH\n   '.', SIMULATE_VERSION_PATCH,\n#   ifdef SIMULATE_VERSION_TWEAK\n    '.', SIMULATE_VERSION_TWEAK,\n#   endif\n#  endif\n# endif\n  ']','\\0'}\n#endif\n\n/* Construct the string literal in pieces to prevent the source from\n   getting matched.  Store it in a pointer rather than an array\n   because some compilers will just produce instructions to fill the\n   array rather than assigning a pointer to a static array.  */\nchar const* info_platform = \"INFO\" \":\" \"platform[\" PLATFORM_ID \"]\"\nchar const* info_arch = \"INFO\" \":\" \"arch[\" ARCHITECTURE_ID \"]\"\n\n")
set(CMAKE_CXX_COMPILER_ID_RUN "1")
set(CMAKE_CXX_COMPILER_ID_TEST_FLAGS "-c")
set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX "2")
set(CMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX "\nLd[^\n]*(\n[ 	]+[^\n]*)*\n[ 	]+([^ 	\n\n]+)[^\n\n]*-o[^\n\n]*CompilerIdCXX/(\\./)?(CompilerIdCXX.xctest/)?CompilerIdCXX[ 	\n\\\"]")
set(CMAKE_CXX_COMPILER_ID_VENDORS "IAR")
set(CMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR "IAR .+ Compiler")
set(CMAKE_CXX_COMPILER_INIT "/usr/bin/g++-5")
set(CMAKE_CXX_COMPILER_LIST "/usr/bin/g++-5")
set(CMAKE_CXX_COMPILER_LOADED "1")
set(CMAKE_CXX_COMPILER_NAMES "c++")
set(CMAKE_CXX_COMPILER_PREDEFINES_COMMAND "/usr/bin/g++-5-dM-E-c/usr/share/cmake/Modules/CMakeCXXCompilerABI.cpp")
set(CMAKE_CXX_COMPILER_PRODUCED_FILES "a.out")
set(CMAKE_CXX_COMPILER_PRODUCED_OUTPUT "a.out")
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-5")
set(CMAKE_CXX_COMPILER_RANLIB "/usr/bin/gcc-ranlib-5")
set(CMAKE_CXX_COMPILER_VERSION "5.3.1")
set(CMAKE_CXX_COMPILER_WORKS "TRUE")
set(CMAKE_CXX_COMPILER_WRAPPER "TRUE")
set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98cxx_template_template_parameterscxx_std_11cxx_alias_templatescxx_alignascxx_alignofcxx_attributescxx_auto_typecxx_constexprcxx_decltypecxx_decltype_incomplete_return_typescxx_default_function_template_argscxx_defaulted_functionscxx_defaulted_move_initializerscxx_delegating_constructorscxx_deleted_functionscxx_enum_forward_declarationscxx_explicit_conversionscxx_extended_friend_declarationscxx_extern_templatescxx_finalcxx_func_identifiercxx_generalized_initializerscxx_inheriting_constructorscxx_inline_namespacescxx_lambdascxx_local_type_template_argscxx_long_long_typecxx_noexceptcxx_nonstatic_member_initcxx_nullptrcxx_overridecxx_range_forcxx_raw_string_literalscxx_reference_qualified_functionscxx_right_angle_bracketscxx_rvalue_referencescxx_sizeof_membercxx_static_assertcxx_strong_enumscxx_thread_localcxx_trailing_return_typescxx_unicode_literalscxx_uniform_initializationcxx_unrestricted_unionscxx_user_literalscxx_variadic_macroscxx_variadic_templatescxx_std_14cxx_aggregate_default_initializerscxx_attribute_deprecatedcxx_binary_literalscxx_contextual_conversionscxx_decltype_autocxx_digit_separatorscxx_generic_lambdascxx_lambda_init_capturescxx_relaxed_constexprcxx_return_type_deductioncxx_variable_templatescxx_std_17")
set(CMAKE_CXX_COMPILE_OBJECT "<CMAKE_CXX_COMPILER>  <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>")
set(CMAKE_CXX_COMPILE_OPTIONS_IPO "-flto-fno-fat-lto-objects")
set(CMAKE_CXX_COMPILE_OPTIONS_PIC "-fPIC")
set(CMAKE_CXX_COMPILE_OPTIONS_PIE "-fPIE")
set(CMAKE_CXX_COMPILE_OPTIONS_SYSROOT "--sysroot=")
set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY "-fvisibility=")
set(CMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN "-fvisibility-inlines-hidden")
set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>")
set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE "<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>")
set(CMAKE_CXX_CREATE_SHARED_LIBRARY "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
set(CMAKE_CXX_CREATE_SHARED_MODULE "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
set(CMAKE_CXX_FLAGS "-std=c++11")
set(CMAKE_CXX_FLAGS "-std=c++11")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_DEBUG_INIT "-g")
set(CMAKE_CXX_FLAGS_INIT "-g")
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG")
set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT "-Os -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE_INIT "-O3 -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT "-O2 -g -DNDEBUG")
set(CMAKE_CXX_IGNORE_EXTENSIONS "inlhhppHPPHoOobjOBJdefDEFrcRC")
set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/usr/include")
set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/home/fulup/opt/lib64/usr/lib64/gcc/x86_64-suse-linux/5/usr/lib64/lib64/home/fulup/opt/lib/usr/x86_64-suse-linux/lib")
set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/home/fulup/opt/lib64/usr/lib64/gcc/x86_64-suse-linux/5/usr/lib64/lib64/home/fulup/opt/lib/usr/x86_64-suse-linux/lib")
set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++mgcc_sgcccgcc_sgcc")
set(CMAKE_CXX_INFORMATION_LOADED "1")
set(CMAKE_CXX_LIBRARY_ARCHITECTURE "1")
set(CMAKE_CXX_LINKER_PREFERENCE "30")
set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES "1")
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>")
set(CMAKE_CXX_OUTPUT_EXTENSION ".o")
set(CMAKE_CXX_PLATFORM_ID "Linux")
set(CMAKE_CXX_SIMULATE_ID "Linux")
set(CMAKE_CXX_SIMULATE_VERSION "Linux")
set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS "CMc++cccppcxxmmCPP")
set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "98")
set(CMAKE_CXX_STANDARD_DEFAULT "98")
set(CMAKE_CXX_VERBOSE_FLAG "-v")
set(CMAKE_CXX_XCODE_CURRENT_ARCH "-v")
set(CMAKE_C_ABI_COMPILED "TRUE")
set(CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> q  <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_C_ARCHIVE_APPEND_IPO "/usr/bin/gcc-ar-5 r <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_C_ARCHIVE_CREATE_IPO "/usr/bin/gcc-ar-5 cr <TARGET> <LINK_FLAGS> <OBJECTS>")
set(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>")
set(CMAKE_C_ARCHIVE_FINISH_IPO "/usr/bin/gcc-ranlib-5 <TARGET>")
set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "/usr/bin/gcc-ranlib-5 <TARGET>")
set(CMAKE_C_COMPILER "/usr/bin/gcc-5")
set(CMAKE_C_COMPILER "/usr/bin/gcc-5")
set(CMAKE_C_COMPILER_ABI "ELF")
set(CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar-5")
set(CMAKE_C_COMPILER_AR "/usr/bin/gcc-ar-5")
set(CMAKE_C_COMPILER_ARG1 "/usr/bin/gcc-ar-5")
set(CMAKE_C_COMPILER_ENV_VAR "CC")
set(CMAKE_C_COMPILER_ID "GNU")
set(CMAKE_C_COMPILER_ID_PLATFORM_CONTENT "#define STRINGIFY_HELPER(X) #X\n#define STRINGIFY(X) STRINGIFY_HELPER(X)\n\n/* Identify known platforms by name.  */\n#if defined(__linux) || defined(__linux__) || defined(linux)\n# define PLATFORM_ID \"Linux\"\n\n#elif defined(__CYGWIN__)\n# define PLATFORM_ID \"Cygwin\"\n\n#elif defined(__MINGW32__)\n# define PLATFORM_ID \"MinGW\"\n\n#elif defined(__APPLE__)\n# define PLATFORM_ID \"Darwin\"\n\n#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)\n# define PLATFORM_ID \"Windows\"\n\n#elif defined(__FreeBSD__) || defined(__FreeBSD)\n# define PLATFORM_ID \"FreeBSD\"\n\n#elif defined(__NetBSD__) || defined(__NetBSD)\n# define PLATFORM_ID \"NetBSD\"\n\n#elif defined(__OpenBSD__) || defined(__OPENBSD)\n# define PLATFORM_ID \"OpenBSD\"\n\n#elif defined(__sun) || defined(sun)\n# define PLATFORM_ID \"SunOS\"\n\n#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)\n# define PLATFORM_ID \"AIX\"\n\n#elif defined(__sgi) || defined(__sgi__) || defined(_SGI)\n# define PLATFORM_ID \"IRIX\"\n\n#elif defined(__hpux) || defined(__hpux__)\n# define PLATFORM_ID \"HP-UX\"\n\n#elif defined(__HAIKU__)\n# define PLATFORM_ID \"Haiku\"\n\n#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)\n# define PLATFORM_ID \"BeOS\"\n\n#elif defined(__QNX__) || defined(__QNXNTO__)\n# define PLATFORM_ID \"QNX\"\n\n#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)\n# define PLATFORM_ID \"Tru64\"\n\n#elif defined(__riscos) || defined(__riscos__)\n# define PLATFORM_ID \"RISCos\"\n\n#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)\n# define PLATFORM_ID \"SINIX\"\n\n#elif defined(__UNIX_SV__)\n# define PLATFORM_ID \"UNIX_SV\"\n\n#elif defined(__bsdos__)\n# define PLATFORM_ID \"BSDOS\"\n\n#elif defined(_MPRAS) || defined(MPRAS)\n# define PLATFORM_ID \"MP-RAS\"\n\n#elif defined(__osf) || defined(__osf__)\n# define PLATFORM_ID \"OSF1\"\n\n#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)\n# define PLATFORM_ID \"SCO_SV\"\n\n#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)\n# define PLATFORM_ID \"ULTRIX\"\n\n#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)\n# define PLATFORM_ID \"Xenix\"\n\n#elif defined(__WATCOMC__)\n# if defined(__LINUX__)\n#  define PLATFORM_ID \"Linux\"\n\n# elif defined(__DOS__)\n#  define PLATFORM_ID \"DOS\"\n\n# elif defined(__OS2__)\n#  define PLATFORM_ID \"OS2\"\n\n# elif defined(__WINDOWS__)\n#  define PLATFORM_ID \"Windows3x\"\n\n# else /* unknown platform */\n#  define PLATFORM_ID\n# endif\n\n#else /* unknown platform */\n# define PLATFORM_ID\n\n#endif\n\n/* For windows compilers MSVC and Intel we can determine\n   the architecture of the compiler being used.  This is because\n   the compilers do not have flags that can change the architecture,\n   but rather depend on which compiler is being used\n*/\n#if defined(_WIN32) && defined(_MSC_VER)\n# if defined(_M_IA64)\n#  define ARCHITECTURE_ID \"IA64\"\n\n# elif defined(_M_X64) || defined(_M_AMD64)\n#  define ARCHITECTURE_ID \"x64\"\n\n# elif defined(_M_IX86)\n#  define ARCHITECTURE_ID \"X86\"\n\n# elif defined(_M_ARM)\n#  if _M_ARM == 4\n#   define ARCHITECTURE_ID \"ARMV4I\"\n#  elif _M_ARM == 5\n#   define ARCHITECTURE_ID \"ARMV5I\"\n#  else\n#   define ARCHITECTURE_ID \"ARMV\" STRINGIFY(_M_ARM)\n#  endif\n\n# elif defined(_M_MIPS)\n#  define ARCHITECTURE_ID \"MIPS\"\n\n# elif defined(_M_SH)\n#  define ARCHITECTURE_ID \"SHx\"\n\n# else /* unknown architecture */\n#  define ARCHITECTURE_ID \"\"\n# endif\n\n#elif defined(__WATCOMC__)\n# if defined(_M_I86)\n#  define ARCHITECTURE_ID \"I86\"\n\n# elif defined(_M_IX86)\n#  define ARCHITECTURE_ID \"X86\"\n\n# else /* unknown architecture */\n#  define ARCHITECTURE_ID \"\"\n# endif\n\n#else\n#  define ARCHITECTURE_ID\n#endif\n\n/* Convert integer to decimal digit literals.  */\n#define DEC(n)                   \\\n  ('0' + (((n) / 10000000)%10)), \\\n  ('0' + (((n) / 1000000)%10)),  \\\n  ('0' + (((n) / 100000)%10)),   \\\n  ('0' + (((n) / 10000)%10)),    \\\n  ('0' + (((n) / 1000)%10)),     \\\n  ('0' + (((n) / 100)%10)),      \\\n  ('0' + (((n) / 10)%10)),       \\\n  ('0' +  ((n) % 10))\n\n/* Convert integer to hex digit literals.  */\n#define HEX(n)             \\\n  ('0' + ((n)>>28 & 0xF)), \\\n  ('0' + ((n)>>24 & 0xF)), \\\n  ('0' + ((n)>>20 & 0xF)), \\\n  ('0' + ((n)>>16 & 0xF)), \\\n  ('0' + ((n)>>12 & 0xF)), \\\n  ('0' + ((n)>>8  & 0xF)), \\\n  ('0' + ((n)>>4  & 0xF)), \\\n  ('0' + ((n)     & 0xF))\n\n/* Construct a string literal encoding the version number components. */\n#ifdef COMPILER_VERSION_MAJOR\nchar const info_version[] = {\n  'I', 'N', 'F', 'O', ':',\n  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\n  COMPILER_VERSION_MAJOR,\n# ifdef COMPILER_VERSION_MINOR\n  '.', COMPILER_VERSION_MINOR,\n#  ifdef COMPILER_VERSION_PATCH\n   '.', COMPILER_VERSION_PATCH,\n#   ifdef COMPILER_VERSION_TWEAK\n    '.', COMPILER_VERSION_TWEAK,\n#   endif\n#  endif\n# endif\n  ']','\\0'}\n#endif\n\n/* Construct a string literal encoding the version number components. */\n#ifdef SIMULATE_VERSION_MAJOR\nchar const info_simulate_version[] = {\n  'I', 'N', 'F', 'O', ':',\n  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\n  SIMULATE_VERSION_MAJOR,\n# ifdef SIMULATE_VERSION_MINOR\n  '.', SIMULATE_VERSION_MINOR,\n#  ifdef SIMULATE_VERSION_PATCH\n   '.', SIMULATE_VERSION_PATCH,\n#   ifdef SIMULATE_VERSION_TWEAK\n    '.', SIMULATE_VERSION_TWEAK,\n#   endif\n#  endif\n# endif\n  ']','\\0'}\n#endif\n\n/* Construct the string literal in pieces to prevent the source from\n   getting matched.  Store it in a pointer rather than an array\n   because some compilers will just produce instructions to fill the\n   array rather than assigning a pointer to a static array.  */\nchar const* info_platform = \"INFO\" \":\" \"platform[\" PLATFORM_ID \"]\"\nchar const* info_arch = \"INFO\" \":\" \"arch[\" ARCHITECTURE_ID \"]\"\n\n")
set(CMAKE_C_COMPILER_ID_RUN "1")
set(CMAKE_C_COMPILER_ID_TEST_FLAGS "-c-Aa-D__CLASSIC_C__")
set(CMAKE_C_COMPILER_ID_TOOL_MATCH_INDEX "2")
set(CMAKE_C_COMPILER_ID_TOOL_MATCH_REGEX "\nLd[^\n]*(\n[ 	]+[^\n]*)*\n[ 	]+([^ 	\n\n]+)[^\n\n]*-o[^\n\n]*CompilerIdC/(\\./)?(CompilerIdC.xctest/)?CompilerIdC[ 	\n\\\"]")
set(CMAKE_C_COMPILER_ID_VENDORS "IAR")
set(CMAKE_C_COMPILER_ID_VENDOR_REGEX_IAR "IAR .+ Compiler")
set(CMAKE_C_COMPILER_INIT "/usr/bin/gcc-5")
set(CMAKE_C_COMPILER_LIST "/usr/bin/gcc-5")
set(CMAKE_C_COMPILER_LOADED "1")
set(CMAKE_C_COMPILER_NAMES "cc")
set(CMAKE_C_COMPILER_PREDEFINES_COMMAND "/usr/bin/gcc-5-dM-E-c/usr/share/cmake/Modules/CMakeCXXCompilerABI.cpp")
set(CMAKE_C_COMPILER_PRODUCED_FILES "a.out")
set(CMAKE_C_COMPILER_PRODUCED_OUTPUT "a.out")
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib-5")
set(CMAKE_C_COMPILER_RANLIB "/usr/bin/gcc-ranlib-5")
set(CMAKE_C_COMPILER_VERSION "5.3.1")
set(CMAKE_C_COMPILER_WORKS "TRUE")
set(CMAKE_C_COMPILER_WRAPPER "TRUE")
set(CMAKE_C_COMPILE_FEATURES "c_std_90c_function_prototypesc_std_99c_restrictc_variadic_macrosc_std_11c_static_assert")
set(CMAKE_C_COMPILE_OBJECT "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT>   -c <SOURCE>")
set(CMAKE_C_COMPILE_OPTIONS_IPO "-flto-fno-fat-lto-objects")
set(CMAKE_C_COMPILE_OPTIONS_PIC "-fPIC")
set(CMAKE_C_COMPILE_OPTIONS_PIE "-fPIE")
set(CMAKE_C_COMPILE_OPTIONS_SYSROOT "--sysroot=")
set(CMAKE_C_COMPILE_OPTIONS_VISIBILITY "-fvisibility=")
set(CMAKE_C_CREATE_ASSEMBLY_SOURCE "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>")
set(CMAKE_C_CREATE_PREPROCESSED_SOURCE "<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>")
set(CMAKE_C_CREATE_SHARED_LIBRARY "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
set(CMAKE_C_CREATE_SHARED_MODULE "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
set(CMAKE_C_FLAGS "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
set(CMAKE_C_FLAGS_DEBUG "-g")
set(CMAKE_C_FLAGS_DEBUG_INIT "-g")
set(CMAKE_C_FLAGS_INIT "-g")
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG")
set(CMAKE_C_FLAGS_MINSIZEREL_INIT "-Os -DNDEBUG")
set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG")
set(CMAKE_C_FLAGS_RELEASE_INIT "-O3 -DNDEBUG")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g -DNDEBUG")
set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT "-O2 -g -DNDEBUG")
set(CMAKE_C_IGNORE_EXTENSIONS "hHoOobjOBJdefDEFrcRC")
set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/usr/include")
set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/home/fulup/opt/lib64/usr/lib64/gcc/x86_64-suse-linux/5/usr/lib64/lib64/home/fulup/opt/lib/usr/x86_64-suse-linux/lib")
set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/home/fulup/opt/lib64/usr/lib64/gcc/x86_64-suse-linux/5/usr/lib64/lib64/home/fulup/opt/lib/usr/x86_64-suse-linux/lib")
set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gccgcc_scgccgcc_s")
set(CMAKE_C_INFORMATION_LOADED "1")
set(CMAKE_C_LIBRARY_ARCHITECTURE "1")
set(CMAKE_C_LINKER_PREFERENCE "10")
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>")
set(CMAKE_C_OUTPUT_EXTENSION ".o")
set(CMAKE_C_PLATFORM_ID "Linux")
set(CMAKE_C_SIMULATE_ID "Linux")
set(CMAKE_C_SIMULATE_VERSION "Linux")
set(CMAKE_C_SIZEOF_DATA_PTR "8")
set(CMAKE_C_SOURCE_FILE_EXTENSIONS "cm")
set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")
set(CMAKE_C_STANDARD_DEFAULT "11")
set(CMAKE_C_VERBOSE_FLAG "-v")
set(CMAKE_C_XCODE_CURRENT_ARCH "-v")
set(CMAKE_DEPFILE_FLAGS_C "-MD -MT <OBJECT> -MF <DEPFILE>")
set(CMAKE_DEPFILE_FLAGS_CXX "-MD -MT <OBJECT> -MF <DEPFILE>")
set(CMAKE_DL_LIBS "dl")
set(CMAKE_EDIT_COMMAND "/usr/bin/ccmake")
set(CMAKE_EXECUTABLE_FORMAT "ELF")
set(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,")
set(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG "-Wl,-rpath-link,")
set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG "-Wl,-rpath,")
set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ":")
set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG "-Wl,-rpath,")
set(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ":")
set(CMAKE_EXECUTABLE_SUFFIX ":")
set(CMAKE_EXE_EXPORTS_CXX_FLAG "-Wl,--export-dynamic")
set(CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "-Wl,--export-dynamic")
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT "-Wl,--export-dynamic")
set(CMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic")
set(CMAKE_EXE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic")
set(CMAKE_EXE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic")
set(CMAKE_EXE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic")
set(CMAKE_EXPORT_COMPILE_COMMANDS "-Wl,-Bstatic")
set(CMAKE_EXTRA_GENERATOR "-Wl,-Bstatic")
set(CMAKE_FILES_DIRECTORY "/CMakeFiles")
set(CMAKE_FIND_LIBRARY_PREFIXES "lib")
set(CMAKE_FIND_LIBRARY_SUFFIXES ".so.a")
set(CMAKE_GENERATOR "Unix Makefiles")
set(CMAKE_GENERATOR_PLATFORM "Unix Makefiles")
set(CMAKE_GENERATOR_TOOLSET "Unix Makefiles")
set(CMAKE_HOME_DIRECTORY "/home/fulup/Workspace/Audio-4a/wsclient-audio4a")
set(CMAKE_HOST_SYSTEM "Linux-4.4.79-19-default")
set(CMAKE_HOST_SYSTEM_NAME "Linux")
set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
set(CMAKE_HOST_SYSTEM_VERSION "4.4.79-19-default")
set(CMAKE_HOST_UNIX "1")
set(CMAKE_INCLUDE_FLAG_C "-I")
set(CMAKE_INCLUDE_FLAG_CXX "-I")
set(CMAKE_INCLUDE_FLAG_C_SEP "-I")
set(CMAKE_INCLUDE_SYSTEM_FLAG_C "-isystem ")
set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX "-isystem ")
set(CMAKE_INSTALL_BINDIR "bin")
set(CMAKE_INSTALL_DATADIR "share")
set(CMAKE_INSTALL_DATADIR "share")
set(CMAKE_INSTALL_DATAROOTDIR "share")
set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME "Unspecified")
set(CMAKE_INSTALL_DOCDIR "share/doc/libclient-audio4a")
set(CMAKE_INSTALL_DOCDIR "share/doc/libclient-audio4a")
set(CMAKE_INSTALL_FULL_BINDIR "/home/fulup/opt/bin")
set(CMAKE_INSTALL_FULL_DATADIR "/home/fulup/opt/share")
set(CMAKE_INSTALL_FULL_DATAROOTDIR "/home/fulup/opt/share")
set(CMAKE_INSTALL_FULL_DOCDIR "/home/fulup/opt/share/doc/libclient-audio4a")
set(CMAKE_INSTALL_FULL_INCLUDEDIR "/home/fulup/opt/include")
set(CMAKE_INSTALL_FULL_INFODIR "/home/fulup/opt/share/info")
set(CMAKE_INSTALL_FULL_LIBDIR "/home/fulup/opt/lib64")
set(CMAKE_INSTALL_FULL_LIBEXECDIR "/home/fulup/opt/libexec")
set(CMAKE_INSTALL_FULL_LOCALEDIR "/home/fulup/opt/share/locale")
set(CMAKE_INSTALL_FULL_LOCALSTATEDIR "/home/fulup/opt/var")
set(CMAKE_INSTALL_FULL_MANDIR "/home/fulup/opt/share/man")
set(CMAKE_INSTALL_FULL_OLDINCLUDEDIR "/usr/include")
set(CMAKE_INSTALL_FULL_RUNSTATEDIR "/home/fulup/opt/var/run")
set(CMAKE_INSTALL_FULL_SBINDIR "/home/fulup/opt/sbin")
set(CMAKE_INSTALL_FULL_SHAREDSTATEDIR "/home/fulup/opt/com")
set(CMAKE_INSTALL_FULL_SYSCONFDIR "/home/fulup/opt/etc")
set(CMAKE_INSTALL_INCLUDEDIR "include")
set(CMAKE_INSTALL_INFODIR "share/info")
set(CMAKE_INSTALL_INFODIR "share/info")
set(CMAKE_INSTALL_LIBDIR "lib64")
set(CMAKE_INSTALL_LIBEXECDIR "libexec")
set(CMAKE_INSTALL_LOCALEDIR "share/locale")
set(CMAKE_INSTALL_LOCALEDIR "share/locale")
set(CMAKE_INSTALL_LOCALSTATEDIR "var")
set(CMAKE_INSTALL_MANDIR "share/man")
set(CMAKE_INSTALL_MANDIR "share/man")
set(CMAKE_INSTALL_OLDINCLUDEDIR "/usr/include")
set(CMAKE_INSTALL_PREFIX "/home/fulup/opt")
set(CMAKE_INSTALL_PREFIX "/home/fulup/opt")
set(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT "1")
set(CMAKE_INSTALL_RUNSTATEDIR "var/run")
set(CMAKE_INSTALL_RUNSTATEDIR "var/run")
set(CMAKE_INSTALL_SBINDIR "sbin")
set(CMAKE_INSTALL_SHAREDSTATEDIR "com")
set(CMAKE_INSTALL_SO_NO_EXE "com")
set(CMAKE_INSTALL_SYSCONFDIR "etc")
set(CMAKE_INTERNAL_PLATFORM_ABI "ELF")
set(CMAKE_LIBRARY_ARCHITECTURE_REGEX "[a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]*")
set(CMAKE_LIBRARY_PATH_FLAG "-L")
set(CMAKE_LIBRARY_PATH_TERMINATOR "-L")
set(CMAKE_LINKER "/usr/bin/ld")
set(CMAKE_LINKER "/usr/bin/ld")
set(CMAKE_LINK_LIBRARY_FLAG "-l")
set(CMAKE_LINK_LIBRARY_SUFFIX "-l")
set(CMAKE_MAJOR_VERSION "3")
set(CMAKE_MAKE_PROGRAM "/usr/bin/gmake")
set(CMAKE_MATCH_0 "/usr/bin/gmake")
set(CMAKE_MATCH_1 "/usr/bin/gmake")
set(CMAKE_MATCH_2 "/usr/bin/gmake")
set(CMAKE_MATCH_3 "/usr/bin/gmake")
set(CMAKE_MATCH_COUNT "/usr/bin/gmake")
set(CMAKE_MINIMUM_REQUIRED_VERSION "3.3")
set(CMAKE_MINOR_VERSION "9")
set(CMAKE_MODULE_LINKER_FLAGS "9")
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "9")
set(CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT "9")
set(CMAKE_MODULE_LINKER_FLAGS_INIT "9")
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "9")
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT "9")
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "9")
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT "9")
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "9")
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT "9")
set(CMAKE_NM "/usr/bin/nm")
set(CMAKE_OBJCOPY "/usr/bin/objcopy")
set(CMAKE_OBJDUMP "/usr/bin/objdump")
set(CMAKE_PARENT_LIST_FILE "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/common.cmake")
set(CMAKE_PATCH_VERSION "4")
set(CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "/lib/lib32/lib64/usr/lib/usr/lib32/usr/lib64")
set(CMAKE_PLATFORM_INFO_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build/CMakeFiles/3.9.4")
set(CMAKE_PLATFORM_INFO_INITIALIZED "1")
set(CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME "1")
set(CMAKE_POSITION_INDEPENDENT_CODE "ON")
set(CMAKE_PREFIX_PATH "/home/fulup/opt/lib64/pkgconfig/home/fulup/opt/lib/pkgconfig")
set(CMAKE_PROJECT_NAME "libclient-audio4a")
set(CMAKE_RANLIB "/usr/bin/ranlib")
set(CMAKE_RANLIB "/usr/bin/ranlib")
set(CMAKE_ROOT "/usr/share/cmake")
set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "-shared")
set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-shared")
set(CMAKE_SHARED_LIBRARY_CXX_FLAGS "-fPIC")
set(CMAKE_SHARED_LIBRARY_C_FLAGS "-fPIC")
set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "-rdynamic")
set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-rdynamic")
set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic")
set(CMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic")
set(CMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic")
set(CMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS "-Wl,-Bstatic")
set(CMAKE_SHARED_LIBRARY_PREFIX "lib")
set(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG "-Wl,-rpath-link,")
set(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,")
set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG "-Wl,-rpath,")
set(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ":")
set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,")
set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP ":")
set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG "-Wl,-soname,")
set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname,")
set(CMAKE_SHARED_LIBRARY_SUFFIX ".so")
set(CMAKE_SHARED_LINKER_FLAGS ".so")
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG ".so")
set(CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT ".so")
set(CMAKE_SHARED_LINKER_FLAGS_INIT ".so")
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ".so")
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT ".so")
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE ".so")
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT ".so")
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ".so")
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT ".so")
set(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS "-shared")
set(CMAKE_SHARED_MODULE_CREATE_C_FLAGS "-shared")
set(CMAKE_SHARED_MODULE_CXX_FLAGS "-fPIC")
set(CMAKE_SHARED_MODULE_C_FLAGS "-fPIC")
set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS "-Wl,-Bdynamic")
set(CMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS "-Wl,-Bdynamic")
set(CMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS "-Wl,-Bstatic")
set(CMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS "-Wl,-Bstatic")
set(CMAKE_SHARED_MODULE_PREFIX "lib")
set(CMAKE_SHARED_MODULE_SUFFIX ".so")
set(CMAKE_SIZEOF_VOID_P "8")
set(CMAKE_SKIP_INSTALL_RPATH "8")
set(CMAKE_SKIP_RPATH "8")
set(CMAKE_SOURCE_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a")
set(CMAKE_STATIC_LIBRARY_PREFIX "lib")
set(CMAKE_STATIC_LIBRARY_SUFFIX ".a")
set(CMAKE_STATIC_LINKER_FLAGS ".a")
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG ".a")
set(CMAKE_STATIC_LINKER_FLAGS_DEBUG_INIT ".a")
set(CMAKE_STATIC_LINKER_FLAGS_INIT ".a")
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL ".a")
set(CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL_INIT ".a")
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE ".a")
set(CMAKE_STATIC_LINKER_FLAGS_RELEASE_INIT ".a")
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO ".a")
set(CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO_INIT ".a")
set(CMAKE_STRIP "/usr/bin/strip")
set(CMAKE_SYSTEM "Linux-4.4.79-19-default")
set(CMAKE_SYSTEM_INCLUDE_PATH "/usr/include/X11")
set(CMAKE_SYSTEM_INFO_FILE "Platform/Linux")
set(CMAKE_SYSTEM_LIBRARY_PATH "/usr/lib/X11")
set(CMAKE_SYSTEM_LOADED "1")
set(CMAKE_SYSTEM_NAME "Linux")
set(CMAKE_SYSTEM_PREFIX_PATH "/usr/local/usr//usr/usr/local/usr/X11R6/usr/pkg/opt")
set(CMAKE_SYSTEM_PROCESSOR "x86_64")
set(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED "1")
set(CMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED "1")
set(CMAKE_SYSTEM_VERSION "4.4.79-19-default")
set(CMAKE_TWEAK_VERSION "4.4.79-19-default")
set(CMAKE_UNAME "/usr/bin/uname")
set(CMAKE_VERBOSE_MAKEFILE "/usr/bin/uname")
set(CMAKE_VERSION "3.9.4")
set(CMD_ARCHIVE_SUBMODULE "'gitarchive--verbose--prefix=agl-libclient-audio4a-1.0/$$path/--formattarHEAD--output/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/packaging/agl-libclient-audio4a-sub-$$sha1.tar'")
set(CMP0048 "1")
set(COMPILE_OPTIONS "-Wall-Wextra-Wconversion-Wno-unused-parameter-Wno-sign-compare-Wno-sign-conversion-Werror=maybe-uninitialized-Werror=implicit-function-declaration-ffunction-sections-fdata-sections-fPIC")
set(CXX_TEST_WAS_RUN "1")
set(C_TEST_WAS_RUN "1")
set(CacheForScript "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build/CMakeCacheForScript.cmake")
set(ColourBold "[1m")
set(ColourReset "[m")
set(Cyan "[36m")
set(DEBUG_COMPILE_OPTIONS "-g-ggdb-Wp,-U_FORTIFY_SOURCE")
set(ENTRY_POINT "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d")
set(Esc "")
set(FIND_PACKAGE_MESSAGE_DETAILS_PkgConfig "[/usr/bin/pkg-config][v0.28()]")
set(GDB_INITIAL_BREAK "personality")
set(Green "[32m")
set(HAVE_LIBEFENCE "1")
set(JSON_CHECKER "1")
set(KERNEL_VERSION "4.4.0")
set(LD_LIBRARY_PATH "/home/fulup/opt/lib64/home/fulup/opt/lib")
set(LINUX_VERSION_CODE "263168")
set(LINUX_VERSION_CODE_LINE "#define LINUX_VERSION_CODE 263168")
set(LUA_CHECKER "luac-p")
set(MACRO_CHECK_LIBRARY_EXISTS_DEFINITION "-DCHECK_FUNCTION_EXISTS=malloc ")
set(MSVC_CXX_ARCHITECTURE_ID "-DCHECK_FUNCTION_EXISTS=malloc ")
set(MSVC_C_ARCHITECTURE_ID "-DCHECK_FUNCTION_EXISTS=malloc ")
set(Magenta "[35m")
set(NPKG_PROJECT_NAME "agl-libclient-audio4a")
set(OSRELEASE "suse")
set(OS_RELEASE_PATH "/etc/os-release")
set(OUTPUT "Change Dir: /home/fulup/Workspace/Audio-4a/wsclient-audio4a/build/CMakeFiles/CMakeTmp\n\nRun Build Command:\"/usr/bin/gmake\" \"cmTC_c95e7/fast\"\n/usr/bin/gmake -f CMakeFiles/cmTC_c95e7.dir/build.make CMakeFiles/cmTC_c95e7.dir/build\ngmake[1]: Entering directory '/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build/CMakeFiles/CMakeTmp'\nBuilding C object CMakeFiles/cmTC_c95e7.dir/CheckFunctionExists.c.o\n/usr/bin/gcc-5   -DCHECK_FUNCTION_EXISTS=malloc -fPIE   -o CMakeFiles/cmTC_c95e7.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c\n<command-line>:0:23: warning: conflicting types for built-in function ‘malloc’\n/usr/share/cmake/Modules/CheckFunctionExists.c:7:3: note: in expansion of macro ‘CHECK_FUNCTION_EXISTS’\n   CHECK_FUNCTION_EXISTS(void)\n   ^\nLinking C executable cmTC_c95e7\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c95e7.dir/link.txt --verbose=1\n/usr/bin/gcc-5  -DCHECK_FUNCTION_EXISTS=malloc    -rdynamic CMakeFiles/cmTC_c95e7.dir/CheckFunctionExists.c.o  -o cmTC_c95e7 -lefence \ngmake[1]: Leaving directory '/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build/CMakeFiles/CMakeTmp'\n")
set(PKGCONFIG_FOUND "TRUE")
set(PKGOUT_DIR "package")
set(PKG_CONFIG "package")
set(PKG_CONFIG_EXECUTABLE "/usr/bin/pkg-config")
set(PKG_CONFIG_FOUND "TRUE")
set(PKG_CONFIG_USE_CMAKE_PREFIX_PATH "ON")
set(PKG_CONFIG_VERSION "1")
set(PKG_CONFIG_VERSION_STRING "0.28")
set(PKG_REQUIRED_LIST "json-clibsystemd>=222afb-daemonlibmicrohttpd>=0.9.55")
set(PKG_TEMPLATE_PREFIX "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates")
set(PRESET_CMAKE_SYSTEM_NAME "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates")
set(PROFILING_COMPILE_OPTIONS "-g-O0-pg-Wp,-U_FORTIFY_SOURCE")
set(PROJECT_APP_TEMPLATES_DIR "conf.d/app-templates")
set(PROJECT_AUTHOR "Fulup Ar Foll")
set(PROJECT_AUTHOR_MAIL "Fulup@iot.bzh")
set(PROJECT_BINARY_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build")
set(PROJECT_DESCRIPTION "Lib Client for Hight Level AGL audio-4a")
set(PROJECT_ICON "icon.png")
set(PROJECT_LIBDIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/libs")
set(PROJECT_LICENSE "APL2.0")
set(PROJECT_NAME "libclient-audio4a")
set(PROJECT_PKG_BUILD_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build/package")
set(PROJECT_PKG_ENTRY_POINT "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/packaging")
set(PROJECT_PRETTY_NAME "Lib Client Audio-4a")
set(PROJECT_RESOURCES "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/data")
set(PROJECT_SOURCE_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a")
set(PROJECT_TEMPLATE_AGL_AUTOBUILD_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/autobuild/agl")
set(PROJECT_TEMPLATE_LINUX_AUTOBUILD_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/autobuild/linux")
set(PROJECT_URL "https://github.com/iotbzh/libclient-audio4a")
set(PROJECT_VERSION "1.0")
set(PROJECT_VERSION_MAJOR "1")
set(PROJECT_VERSION_MINOR "1")
set(PROJECT_VERSION_PATCH "1")
set(PROJECT_VERSION_TWEAK "1")
set(PkgConfig_FOUND "TRUE")
set(Project_BINARY_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build")
set(Project_SOURCE_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a")
set(RELEASE_COMPILE_OPTIONS "-g-O2")
set(RSYNC_PREFIX "opt")
set(RSYNC_TARGET "10.20.101.198")
set(RUN_CONFIGURE "ON")
set(Red "[31m")
set(TEMPLATE_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/template.d")
set(TMP_ARCHIVE_SUBMODULE "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/packaging/agl-libclient-audio4a-sub")
set(TMP_OSRELEASE "ID_LIKE=\"suse\"\n")
set(UNIX "1")
set(USE_EFENCE "1")
set(WIDGET_CONFIG_TEMPLATE "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/template.d/config.xml.in")
set(WIDGET_ENTRY_POINT "EntryPoint_Path_Not_Set")
set(WIDGET_ICON "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/wgt/icon.png")
set(WIDGET_TYPE "MimeType_Not_Set")
set(White "[37m")
set(XML_CHECKER "xmllint")
set(XPREFIX "libmicrohttpd")
set(Yellow "[33m")
set(_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER "YES")
set(_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE "YES")
set(_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER "YES")
set(_CMAKE_C_IPO_SUPPORTED_BY_CMAKE "YES")
set(_CMAKE_INSTALL_DIR "/usr")
set(_CMAKE_TOOLCHAIN_LOCATION "/usr/bin")
set(_ExternalProject_SELF "/usr/share/cmake/Modules/ExternalProject.cmake")
set(_ExternalProject_SELF_DIR "/usr/share/cmake/Modules")
set(_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX "/home/fulup/opt")
set(_INCLUDED_FILE "/usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake")
set(_INCLUDED_SYSTEM_INFO_FILE "/usr/share/cmake/Modules/Platform/Linux.cmake")
set(_IN_TC "/usr/share/cmake/Modules/Platform/Linux.cmake")
set(_LIBDIR_DEFAULT "lib64")
set(__COMPILER_CMAKE_COMMON_COMPILER_MACROS "1")
set(__COMPILER_GNU "1")
set(__LINUX_COMPILER_GNU "1")
set(__UNIX_PATHS_INCLUDED "1")
set(__gcc_hints "/usr/bin")
set(__lto_flags "-flto-fno-fat-lto-objects")
set(__pkg_config_arguments_afb-daemon "REQUIREDafb-daemon")
set(__pkg_config_arguments_json-c "REQUIREDjson-c")
set(__pkg_config_arguments_libmicrohttpd "REQUIREDlibmicrohttpd>=0.9.55")
set(__pkg_config_arguments_libsystemd "REQUIREDlibsystemd>=222")
set(__pkg_config_checked_afb-daemon "1")
set(__pkg_config_checked_json-c "1")
set(__pkg_config_checked_libmicrohttpd "1")
set(__pkg_config_checked_libsystemd "1")
set(__version_x "5")
set(__version_x_y "5.3")
set(_ep_documentation_line_count "395")
set(_ep_func "ExternalProject_Add_StepDependencies")
set(_ep_hash_algos "MD5|SHA1|SHA224|SHA256|SHA384|SHA512|SHA3_224|SHA3_256|SHA3_384|SHA3_512")
set(_ep_hash_regex "^(MD5|SHA1|SHA224|SHA256|SHA384|SHA512|SHA3_224|SHA3_256|SHA3_384|SHA3_512)=([0-9A-Fa-f]+)$")
set(_ep_key "USES_TERMINAL")
set(_ep_keywords_ExternalProject_Add "^(DEPENDS|PREFIX|LIST_SEPARATOR|TMP_DIR|STAMP_DIR|EXCLUDE_FROM_ALL|DOWNLOAD_NAME|DOWNLOAD_DIR|DOWNLOAD_COMMAND|DOWNLOAD_NO_PROGRESS|CVS_REPOSITORY|CVS_MODULE|CVS_TAG|SVN_REPOSITORY|SVN_REVISION|SVN_USERNAME|SVN_PASSWORD|SVN_TRUST_CERT|GIT_REPOSITORY|GIT_TAG|GIT_REMOTE_NAME|GIT_SUBMODULES|GIT_SHALLOW|GIT_PROGRESS|GIT_CONFIG|HG_REPOSITORY|HG_TAG|URL|URL_HASH|URL_MD5|HTTP_USERNAME|HTTP_PASSWORD|HTTP_HEADER|TLS_VERIFY|TLS_CAINFO|TIMEOUT|DOWNLOAD_NO_EXTRACT|UPDATE_COMMAND|UPDATE_DISCONNECTED|PATCH_COMMAND|SOURCE_DIR|SOURCE_SUBDIR|CONFIGURE_COMMAND|CMAKE_COMMAND|CMAKE_GENERATOR|CMAKE_GENERATOR_PLATFORM|CMAKE_GENERATOR_TOOLSET|CMAKE_ARGS|CMAKE_CACHE_ARGS|CMAKE_CACHE_DEFAULT_ARGS|BINARY_DIR|BUILD_COMMAND|BUILD_IN_SOURCE|BUILD_ALWAYS|BUILD_BYPRODUCTS|INSTALL_DIR|INSTALL_COMMAND|TEST_BEFORE_INSTALL|TEST_AFTER_INSTALL|TEST_EXCLUDE_FROM_MAIN|TEST_COMMAND|LOG_DOWNLOAD|LOG_UPDATE|LOG_CONFIGURE|LOG_BUILD|LOG_TEST|LOG_INSTALL|USES_TERMINAL_DOWNLOAD|USES_TERMINAL_UPDATE|USES_TERMINAL_CONFIGURE|USES_TERMINAL_BUILD|USES_TERMINAL_TEST|USES_TERMINAL_INSTALL|STEP_TARGETS|INDEPENDENT_STEP_TARGETS)$")
set(_ep_keywords_ExternalProject_Add_Step "^(COMMAND|COMMENT|DEPENDEES|DEPENDERS|DEPENDS|BYPRODUCTS|ALWAYS|EXCLUDE_FROM_MAIN|WORKING_DIRECTORY|LOG|USES_TERMINAL)$")
set(_ep_keywords_ExternalProject_Add_StepDependencies "^()$")
set(_ep_keywords_ExternalProject_Add_StepTargets "^()$")
set(_ep_keywords_ExternalProject_Get_Property "^()$")
set(_imp_target "^()$")
set(_lib_dir "^()$")
set(_no_cmake_environment_path "^()$")
set(_no_cmake_path "^()$")
set(_pkg "^()$")
set(_pkg_check_modules_cnt "1")
set(_pkg_check_modules_exist_query "--print-errors--short-errorslibmicrohttpd >= 0.9.55")
set(_pkg_check_modules_list "libmicrohttpd>=0.9.55")
set(_pkg_check_modules_packages "libmicrohttpd")
set(_pkg_check_modules_pkg "libmicrohttpd")
set(_pkg_check_modules_pkg_name "libmicrohttpd")
set(_pkg_check_modules_pkg_op ">=")
set(_pkg_check_modules_pkg_ver "0.9.55")
set(_pkg_check_prefix "libmicrohttpd")
set(_pkg_is_required "1")
set(_pkg_is_silent "1")
set(_pkg_modules "libmicrohttpd>=0.9.55")
set(_pkgconfig_CFLAGS "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(_pkgconfig_INCLUDE_DIRS "/home/fulup/opt/include/usr/include/p11-kit-1")
set(_pkgconfig_LDFLAGS "-L/home/fulup/opt/lib64-lmicrohttpd")
set(_pkgconfig_LIBRARIES "microhttpd")
set(_pkgconfig_LIBRARY_DIRS "/home/fulup/opt/lib64")
set(_pkgconfig_STATIC_CFLAGS "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(_pkgconfig_STATIC_INCLUDE_DIRS "/home/fulup/opt/include/usr/include/p11-kit-1")
set(_pkgconfig_STATIC_LDFLAGS "-L/home/fulup/opt/lib64-L/lib64-lmicrohttpd-lgcrypt-ldl-lgpg-error-lgnutls/usr/lib64/libz.so-lp11-kit-lgmp-lhogweed-lgmp-lnettle-ltasn1-lp11-kit-lz")
set(_pkgconfig_STATIC_LDFLAGS_OTHER "/usr/lib64/libz.so")
set(_pkgconfig_STATIC_LIBRARIES "microhttpdgcryptdlgpg-errorgnutlsp11-kitgmphogweedgmpnettletasn1p11-kitz")
set(_pkgconfig_STATIC_LIBRARY_DIRS "/home/fulup/opt/lib64/lib64")
set(_pkgconfig_VERSION "0.9.55")
set(_pkgconfig_error "0.9.55")
set(_pkgconfig_failed "0.9.55")
set(_pkgconfig_invoke_result "0.9.55")
set(_pkgconfig_retval "0.9.55")
set(_prefix_dir "0.9.55")
set(a "4")
set(afb-daemon_CFLAGS "-I/home/fulup/opt/include-I/usr/include/json-c")
set(afb-daemon_CFLAGS_I "-I/home/fulup/opt/include-I/usr/include/json-c")
set(afb-daemon_CFLAGS_OTHER "-I/home/fulup/opt/include-I/usr/include/json-c")
set(afb-daemon_FOUND "1")
set(afb-daemon_INCLUDEDIR "/home/fulup/opt/include")
set(afb-daemon_INCLUDE_DIRS "/home/fulup/opt/include/usr/include/json-c")
set(afb-daemon_LDFLAGS "-ljson-c")
set(afb-daemon_LDFLAGS_OTHER "-ljson-c")
set(afb-daemon_LIBDIR "-ljson-c")
set(afb-daemon_LIBRARIES "json-c")
set(afb-daemon_LIBRARY_DIRS "json-c")
set(afb-daemon_LIBS "json-c")
set(afb-daemon_LIBS_L "json-c")
set(afb-daemon_LIBS_OTHER "json-c")
set(afb-daemon_LIBS_PATHS "json-c")
set(afb-daemon_PREFIX "json-c")
set(afb-daemon_STATIC_CFLAGS "-I/home/fulup/opt/include-I/usr/include/json-c")
set(afb-daemon_STATIC_CFLAGS_I "-I/home/fulup/opt/include-I/usr/include/json-c")
set(afb-daemon_STATIC_CFLAGS_OTHER "-I/home/fulup/opt/include-I/usr/include/json-c")
set(afb-daemon_STATIC_INCLUDE_DIRS "/home/fulup/opt/include/usr/include/json-c")
set(afb-daemon_STATIC_LDFLAGS "-ljson-c")
set(afb-daemon_STATIC_LDFLAGS_OTHER "-ljson-c")
set(afb-daemon_STATIC_LIBDIR "-ljson-c")
set(afb-daemon_STATIC_LIBRARIES "json-c")
set(afb-daemon_STATIC_LIBRARY_DIRS "json-c")
set(afb-daemon_STATIC_LIBS "json-c")
set(afb-daemon_STATIC_LIBS_L "json-c")
set(afb-daemon_STATIC_LIBS_OTHER "json-c")
set(afb-daemon_STATIC_LIBS_PATHS "json-c")
set(afb-daemon_VERSION "4.99-EERC1")
set(afb-daemon_afb-daemon_INCLUDEDIR "4.99-EERC1")
set(afb-daemon_afb-daemon_LIBDIR "4.99-EERC1")
set(afb-daemon_afb-daemon_PREFIX "4.99-EERC1")
set(afb-daemon_afb-daemon_VERSION "4.99-EERC1")
set(b "4")
set(c "4")
set(dir "4")
set(distro_cmakefiles "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/../cmake/00-default-debug.cmake")
set(f "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/../cmake/00-default-debug.cmake")
set(file "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/04-extra_targets.cmake")
set(gcc_minimal_version "4.9")
set(home_cmakefiles "/home/fulup/.config/app-templates/cmake.d/00-common-target.cmake")
set(json-c_CFLAGS "-I/usr/include/json-c")
set(json-c_CFLAGS_I "-I/usr/include/json-c")
set(json-c_CFLAGS_OTHER "-I/usr/include/json-c")
set(json-c_FOUND "1")
set(json-c_INCLUDEDIR "/usr/include")
set(json-c_INCLUDE_DIRS "/usr/include/json-c")
set(json-c_LDFLAGS "-ljson-c")
set(json-c_LDFLAGS_OTHER "-ljson-c")
set(json-c_LIBDIR "/usr/lib64")
set(json-c_LIBRARIES "json-c")
set(json-c_LIBRARY_DIRS "json-c")
set(json-c_LIBS "json-c")
set(json-c_LIBS_L "json-c")
set(json-c_LIBS_OTHER "json-c")
set(json-c_LIBS_PATHS "json-c")
set(json-c_PREFIX "/usr")
set(json-c_STATIC_CFLAGS "-I/usr/include/json-c")
set(json-c_STATIC_CFLAGS_I "-I/usr/include/json-c")
set(json-c_STATIC_CFLAGS_OTHER "-I/usr/include/json-c")
set(json-c_STATIC_INCLUDE_DIRS "/usr/include/json-c")
set(json-c_STATIC_LDFLAGS "-ljson-c")
set(json-c_STATIC_LDFLAGS_OTHER "-ljson-c")
set(json-c_STATIC_LIBDIR "-ljson-c")
set(json-c_STATIC_LIBRARIES "json-c")
set(json-c_STATIC_LIBRARY_DIRS "json-c")
set(json-c_STATIC_LIBS "json-c")
set(json-c_STATIC_LIBS_L "json-c")
set(json-c_STATIC_LIBS_OTHER "json-c")
set(json-c_STATIC_LIBS_PATHS "json-c")
set(json-c_VERSION "0.12")
set(json-c_json-c_INCLUDEDIR "0.12")
set(json-c_json-c_LIBDIR "0.12")
set(json-c_json-c_PREFIX "0.12")
set(json-c_json-c_VERSION "0.12")
set(l "0.12")
set(libclient-audio4a_BINARY_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/build")
set(libclient-audio4a_SOURCE_DIR "/home/fulup/Workspace/Audio-4a/wsclient-audio4a")
set(libclient-audio4a_VERSION "1.0")
set(libclient-audio4a_VERSION_MAJOR "1")
set(libclient-audio4a_VERSION_MINOR "1")
set(libclient-audio4a_VERSION_PATCH "1")
set(libclient-audio4a_VERSION_TWEAK "1")
set(libefence_LIBRARIES "-lefence")
set(libmicrohttpd_CFLAGS "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(libmicrohttpd_CFLAGS_I "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(libmicrohttpd_CFLAGS_OTHER "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(libmicrohttpd_FOUND "1")
set(libmicrohttpd_INCLUDEDIR "/home/fulup/opt/include")
set(libmicrohttpd_INCLUDE_DIRS "/home/fulup/opt/include/usr/include/p11-kit-1")
set(libmicrohttpd_LDFLAGS "-L/home/fulup/opt/lib64-lmicrohttpd")
set(libmicrohttpd_LDFLAGS_OTHER "-L/home/fulup/opt/lib64-lmicrohttpd")
set(libmicrohttpd_LIBDIR "/home/fulup/opt/lib64")
set(libmicrohttpd_LIBRARIES "microhttpd")
set(libmicrohttpd_LIBRARY_DIRS "/home/fulup/opt/lib64")
set(libmicrohttpd_LIBS "/home/fulup/opt/lib64")
set(libmicrohttpd_LIBS_L "/home/fulup/opt/lib64")
set(libmicrohttpd_LIBS_OTHER "/home/fulup/opt/lib64")
set(libmicrohttpd_LIBS_PATHS "/home/fulup/opt/lib64")
set(libmicrohttpd_PREFIX "/home/fulup/opt")
set(libmicrohttpd_STATIC_CFLAGS "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(libmicrohttpd_STATIC_CFLAGS_I "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(libmicrohttpd_STATIC_CFLAGS_OTHER "-I/home/fulup/opt/include-I/usr/include/p11-kit-1")
set(libmicrohttpd_STATIC_INCLUDE_DIRS "/home/fulup/opt/include/usr/include/p11-kit-1")
set(libmicrohttpd_STATIC_LDFLAGS "-L/home/fulup/opt/lib64-L/lib64-lmicrohttpd-lgcrypt-ldl-lgpg-error-lgnutls/usr/lib64/libz.so-lp11-kit-lgmp-lhogweed-lgmp-lnettle-ltasn1-lp11-kit-lz")
set(libmicrohttpd_STATIC_LDFLAGS_OTHER "/usr/lib64/libz.so")
set(libmicrohttpd_STATIC_LIBDIR "/usr/lib64/libz.so")
set(libmicrohttpd_STATIC_LIBRARIES "microhttpdgcryptdlgpg-errorgnutlsp11-kitgmphogweedgmpnettletasn1p11-kitz")
set(libmicrohttpd_STATIC_LIBRARY_DIRS "/home/fulup/opt/lib64/lib64")
set(libmicrohttpd_STATIC_LIBS "/home/fulup/opt/lib64/lib64")
set(libmicrohttpd_STATIC_LIBS_L "/home/fulup/opt/lib64/lib64")
set(libmicrohttpd_STATIC_LIBS_OTHER "/home/fulup/opt/lib64/lib64")
set(libmicrohttpd_STATIC_LIBS_PATHS "/home/fulup/opt/lib64/lib64")
set(libmicrohttpd_VERSION "0.9.55")
set(libmicrohttpd_libmicrohttpd_INCLUDEDIR "0.9.55")
set(libmicrohttpd_libmicrohttpd_LIBDIR "0.9.55")
set(libmicrohttpd_libmicrohttpd_PREFIX "0.9.55")
set(libmicrohttpd_libmicrohttpd_VERSION "0.9.55")
set(libsystemd_CFLAGS "0.9.55")
set(libsystemd_CFLAGS_I "0.9.55")
set(libsystemd_CFLAGS_OTHER "0.9.55")
set(libsystemd_FOUND "1")
set(libsystemd_INCLUDEDIR "/usr/include")
set(libsystemd_INCLUDE_DIRS "/usr/include")
set(libsystemd_LDFLAGS "-lsystemd")
set(libsystemd_LDFLAGS_OTHER "-lsystemd")
set(libsystemd_LIBDIR "/usr/lib64")
set(libsystemd_LIBRARIES "systemd")
set(libsystemd_LIBRARY_DIRS "systemd")
set(libsystemd_LIBS "systemd")
set(libsystemd_LIBS_L "systemd")
set(libsystemd_LIBS_OTHER "systemd")
set(libsystemd_LIBS_PATHS "systemd")
set(libsystemd_PREFIX "/usr")
set(libsystemd_STATIC_CFLAGS "/usr")
set(libsystemd_STATIC_CFLAGS_I "/usr")
set(libsystemd_STATIC_CFLAGS_OTHER "/usr")
set(libsystemd_STATIC_INCLUDE_DIRS "/usr")
set(libsystemd_STATIC_LDFLAGS "-lsystemd")
set(libsystemd_STATIC_LDFLAGS_OTHER "-lsystemd")
set(libsystemd_STATIC_LIBDIR "-lsystemd")
set(libsystemd_STATIC_LIBRARIES "systemd")
set(libsystemd_STATIC_LIBRARY_DIRS "systemd")
set(libsystemd_STATIC_LIBS "systemd")
set(libsystemd_STATIC_LIBS_L "systemd")
set(libsystemd_STATIC_LIBS_OTHER "systemd")
set(libsystemd_STATIC_LIBS_PATHS "systemd")
set(libsystemd_VERSION "228")
set(libsystemd_libsystemd_INCLUDEDIR "228")
set(libsystemd_libsystemd_LIBDIR "228")
set(libsystemd_libsystemd_PREFIX "228")
set(libsystemd_libsystemd_VERSION "228")
set(line "228")
set(lines ".. command:: ExternalProject_Add  ``DEPENDS <projects>...``  ``PREFIX <dir>``  ``LIST_SEPARATOR <sep>``  ``TMP_DIR <dir>``  ``STAMP_DIR <dir>``  ``EXCLUDE_FROM_ALL 1``  ``DOWNLOAD_NAME <fname>``  ``DOWNLOAD_DIR <dir>``  ``DOWNLOAD_COMMAND <cmd>...``  ``DOWNLOAD_NO_PROGRESS 1``  ``CVS_REPOSITORY <cvsroot>``  ``CVS_MODULE <mod>``  ``CVS_TAG <tag>``  ``SVN_REPOSITORY <url>``  ``SVN_REVISION -r<rev>``  ``SVN_USERNAME <username>``  ``SVN_PASSWORD <password>``  ``SVN_TRUST_CERT 1``  ``GIT_REPOSITORY <url>``  ``GIT_TAG <tag>``  ``GIT_REMOTE_NAME <name>``  ``GIT_SUBMODULES <module>...``  ``GIT_SHALLOW 1``  ``GIT_PROGRESS 1``  ``GIT_CONFIG <option>...``  ``HG_REPOSITORY <url>``  ``HG_TAG <tag>``  ``URL /.../src.tgz [/.../src.tgz]...``  ``URL_HASH ALGO=value``  ``URL_MD5 md5``  ``HTTP_USERNAME <username>``  ``HTTP_PASSWORD <username>``  ``HTTP_HEADER <header>``  ``TLS_VERIFY <bool>``  ``TLS_CAINFO <file>``  ``TIMEOUT <seconds>``  ``DOWNLOAD_NO_EXTRACT 1``  ``UPDATE_COMMAND <cmd>...``  ``UPDATE_DISCONNECTED 1``  ``PATCH_COMMAND <cmd>...``  ``SOURCE_DIR <dir>``  ``SOURCE_SUBDIR <dir>``  ``CONFIGURE_COMMAND <cmd>...``  ``CMAKE_COMMAND /.../cmake``  ``CMAKE_GENERATOR <gen>``  ``CMAKE_GENERATOR_PLATFORM <platform>``  ``CMAKE_GENERATOR_TOOLSET <toolset>``  ``CMAKE_ARGS <arg>...``  ``CMAKE_CACHE_ARGS <arg>...``  ``CMAKE_CACHE_DEFAULT_ARGS <arg>...``  ``BINARY_DIR <dir>``  ``BUILD_COMMAND <cmd>...``  ``BUILD_IN_SOURCE 1``  ``BUILD_ALWAYS 1``  ``BUILD_BYPRODUCTS <file>...``  ``INSTALL_DIR <dir>``  ``INSTALL_COMMAND <cmd>...``  ``TEST_BEFORE_INSTALL 1``  ``TEST_AFTER_INSTALL 1``  ``TEST_EXCLUDE_FROM_MAIN 1``  ``TEST_COMMAND <cmd>...``  ``LOG_DOWNLOAD 1``  ``LOG_UPDATE 1``  ``LOG_CONFIGURE 1``  ``LOG_BUILD 1``  ``LOG_TEST 1``  ``LOG_INSTALL 1``  ``USES_TERMINAL_DOWNLOAD 1``  ``USES_TERMINAL_UPDATE 1``  ``USES_TERMINAL_CONFIGURE 1``  ``USES_TERMINAL_BUILD 1``  ``USES_TERMINAL_TEST 1``  ``USES_TERMINAL_INSTALL 1``  ``STEP_TARGETS <step-target>...``  ``INDEPENDENT_STEP_TARGETS <step-target>...``.. command:: ExternalProject_Add_Step  ``COMMAND <cmd>...``  ``COMMENT \"<text>...\"``  ``DEPENDEES <step>...``  ``DEPENDERS <step>...``  ``DEPENDS <file>...``  ``BYPRODUCTS <file>...``  ``ALWAYS 1``  ``EXCLUDE_FROM_MAIN 1``  ``WORKING_DIRECTORY <dir>``  ``LOG 1``  ``USES_TERMINAL 1``.. command:: ExternalProject_Get_Property.. command:: ExternalProject_Add_StepTargets.. command:: ExternalProject_Add_StepDependencies")
set(link_libraries "-ljson-c-lsystemd-ljson-c-L/home/fulup/opt/lib64-lmicrohttpd-lefence")
set(option "-ljson-c-lsystemd-ljson-c-L/home/fulup/opt/lib64-lmicrohttpd-lefence")
set(pkg_count "1")
set(prefix_result "/home/fulup/opt/lib64")
set(project_cmakefiles "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/../cmake/00-default-debug.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/01-build_options.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/02-variables.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/03-macros.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/04-extra_targets.cmake")
set(system_cmakefiles "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/../cmake/00-default-debug.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/01-build_options.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/02-variables.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/03-macros.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/04-extra_targets.cmake")
set(t "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/../cmake/00-default-debug.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/01-build_options.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/02-variables.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/03-macros.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/04-extra_targets.cmake")
set(type "/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/../cmake/00-default-debug.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/01-build_options.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/02-variables.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/03-macros.cmake/home/fulup/Workspace/Audio-4a/wsclient-audio4a/conf.d/app-templates/cmake/cmake.d/04-extra_targets.cmake")
set(uselib32 "TRUE")
set(uselib64 "TRUE")
set(uselibx32 "TRUE")
set(val "TRUE")
set(variable "TRUE")
